{"version":3,"sources":["webpack:///./src/components/skills.js","webpack:///./src/components/contact.js","webpack:///./src/templates/HomeTemplate.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["skills","query","render","data","className","allFile","group","edges","map","imgs","id","node","name","fluid","childImageSharp","objectPosition","contact","allMarkdownRemark","contacts","href","frontmatter","link","target","rel","fixed","img","HomeTemplate","subtitle","hasButton","nodes","work","to","path","style","width","featureImage","title","description","IndexPage","createHTML","url","this"],"mappings":"iiMAIe,SAASA,IAEpB,OACQ,kBAAC,cAAD,CACIC,MAAK,aAoBLC,OAAQ,SAAAC,GAAI,OACR,6BAASC,UAAU,UACf,yBAAKA,UAAU,kBACX,uDAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACVD,EAAKE,QAAQC,MAAM,GAAGC,MAAMC,KAAK,SAAAC,GAAI,OAClC,yBAAKC,GAAID,EAAKE,KAAKD,GAAIN,UAAU,oCAC7B,4BAAKK,EAAKE,KAAKC,MACf,kBAAC,IAAD,CACIR,UAAU,aACVS,MAAOJ,EAAKE,KAAKG,gBAAgBD,MACjCE,eAAe,kBAMnC,yBAAKX,UAAU,kBACX,wBAAIA,UAAU,gBAAd,iCAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACVD,EAAKE,QAAQC,MAAM,GAAGC,MAAMC,KAAK,SAAAC,GAAI,OAClC,yBAAKC,GAAID,EAAKE,KAAKD,GAAIN,UAAU,oCAC7B,4BAAKK,EAAKE,KAAKC,MACf,kBAAC,IAAD,CACIR,UAAU,aACVS,MAAOJ,EAAKE,KAAKG,gBAAgBD,MACjCE,eAAe,oBAnD/C,S,kDCuCGC,EA1CC,WAEZ,OACI,kBAAC,cAAD,CACAf,MAAK,WAsBLC,OAAS,SAAAC,GAAI,OACT,6BAASC,UAAU,UAAUM,GAAG,WAC5B,iDAAsB,+CACtB,yBAAKN,UAAU,kCACVD,EAAKc,kBAAkBV,MAAMC,KAAK,SAAAU,GAAQ,OACvC,uBAAGd,UAAU,wBAAwBe,KAAMD,EAASP,KAAKS,YAAYC,KAAMC,OAAO,UAAUC,IAAI,uBAC5F,kBAAC,IAAD,CAAKC,MAAON,EAASP,KAAKS,YAAYK,IAAIX,gBAAgBU,eA7B9E,U,qBCGO,SAASE,IAGpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYhB,GAAG,UAAUN,UAAU,OAAOuB,SAAS,sBAAsBC,WAAW,IACpF,kBAAC,EAAD,MACA,6BAASxB,UAAU,YAAYM,GAAG,aAChC,yBAAKN,UAAU,uBACX,6CAEJ,yBAAKA,UAAU,wBACb,kBAAC,cAAD,CACAH,MAAK,aAuBLC,OAAQ,SAAAC,GAAI,OACRA,EAAKc,kBAAkBY,MAAMrB,KAAK,SAAAsB,GAAI,OAC1B,kBAAC,OAAD,CAAMC,GAAID,EAAKV,YAAYY,KAAM5B,UAAU,iDAAiDM,GAAIoB,EAAKpB,IACjG,yBAAKN,UAAU,QACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAK6B,MAAO,CAACC,MAAO,QAASV,MAAOM,EAAKV,YAAYe,aAAarB,gBAAgBU,SAEtF,yBAAKpB,UAAU,gBACX,4BAAK0B,EAAKV,YAAYgB,OACtB,yBAAKhC,UAAU,WACV0B,EAAKV,YAAYiB,oBAlClD,WA4CA,kBAAC,EAAD,OCtDDC,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAM,SACX,kBAAC,EAAD,S,0tiCCNJ,EAAQ,OAAR,CAA0B,QAAQ,SAAUG,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD","file":"component---src-pages-index-js-ab0244c18d76702b9dd6.js","sourcesContent":["import React from 'React';\r\nimport {StaticQuery, graphql} from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nexport default function skills () {\r\n    \r\n    return(            \r\n            <StaticQuery\r\n                query={graphql`\r\n                    query skills {\r\n                        allFile (sort: {fields: name}){\r\n                            group(field: relativeDirectory) {\r\n                                edges {\r\n                                    node {\r\n                                        id\r\n                                        name\r\n                                        childImageSharp {\r\n                                            fluid (maxWidth: 150){\r\n                                                ...GatsbyImageSharpFluid\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }                        \r\n                `}\r\n\r\n                render={data=> (\r\n                    <section className=\"skills\">\r\n                        <div className=\"column is-full\">\r\n                            <h1>Web Development Skills</h1>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"columns is-multiline\">\r\n                                {data.allFile.group[4].edges.map( imgs => (\r\n                                    <div id={imgs.node.id} className=\"column is-desktop is-full-mobile\">\r\n                                        <h2>{imgs.node.name}</h2>\r\n                                        <Img \r\n                                            className=\"img-skills\"\r\n                                            fluid={imgs.node.childImageSharp.fluid}\r\n                                            objectPosition=\"50% 50%\"\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column is-full\">\r\n                            <h1 className=\"second-title\">Data Analysis/Science Skills</h1>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"columns is-multiline\">\r\n                                {data.allFile.group[3].edges.map( imgs => (\r\n                                    <div id={imgs.node.id} className=\"column is-desktop is-full-mobile\">\r\n                                        <h2>{imgs.node.name}</h2>\r\n                                        <Img \r\n                                            className=\"img-skills\"\r\n                                            fluid={imgs.node.childImageSharp.fluid}\r\n                                            objectPosition=\"50% 50%\"\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            /> \r\n    )\r\n}","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst contact = () =>{\r\n\r\n    return(\r\n        <StaticQuery\r\n        query= {graphql`\r\n        query contactsQuery {\r\n            allMarkdownRemark(filter: {frontmatter: {link: {ne: null}}}) {\r\n              edges {\r\n                node {\r\n                  frontmatter {\r\n                    link\r\n                    img {\r\n                      childImageSharp {\r\n                        fixed (width: 200) {\r\n                            ...GatsbyImageSharpFixed\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n                   \r\n        `}\r\n\r\n        render= {data => (\r\n            <section className=\"contact\" id=\"contact\">\r\n                <h1>Don't hesitate to <strong>Contact me</strong></h1>\r\n                <div className=\"columns is-mobile is-multiline\">\r\n                    {data.allMarkdownRemark.edges.map( contacts => (\r\n                        <a className=\"column is-full-mobile\" href={contacts.node.frontmatter.link} target=\"__blank\" rel=\"noopener noreferrer\">\r\n                            <Img fixed={contacts.node.frontmatter.img.childImageSharp.fixed}/>\r\n                        </a>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default contact","import React from 'react';\r\nimport Skills from '../components/skills';\r\nimport '../styles/templates/HomeTemplate.scss';\r\nimport Background from '../components/background';\r\nimport Contact from '../components/contact';\r\nimport { StaticQuery, Link} from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport PageTransition from 'gatsby-plugin-page-transitions';\r\n\r\n\r\nexport default function HomeTemplate() {\r\n\r\n\r\n    return(\r\n        <PageTransition>\r\n            <Background id=\"topPage\" className=\"hero\" subtitle=\"I'm a Web Developer\" hasButton={true}/>\r\n            <Skills/>\r\n            <section className=\"portfolio\" id=\"portfolio\">\r\n              <div className=\"columns is-centered\">\r\n                  <h1>My Portfolio</h1>\r\n              </div>\r\n              <div className=\"columns is-multiline\">\r\n                <StaticQuery \r\n                query = {graphql`\r\n                query workQuery {\r\n                    allMarkdownRemark(filter: {frontmatter: {category: {eq: \"work\"}}}) {\r\n                      nodes {\r\n                        id\r\n                        frontmatter {\r\n                          title\r\n                          description\r\n                          path\r\n                          featureImage {\r\n                            childImageSharp {\r\n                              fixed (height: 350){\r\n                                ...GatsbyImageSharpFixed\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                        html\r\n                      }\r\n                    }\r\n                  }                                   \r\n                `}\r\n\r\n                render={data =>(\r\n                    data.allMarkdownRemark.nodes.map( work => (\r\n                                <Link to={work.frontmatter.path} className=\"column is-4-desktop is-6-tablet is-full-mobile\" id={work.id}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-image\">\r\n                                            <Img style={{width: '100%'}} fixed={work.frontmatter.featureImage.childImageSharp.fixed} />\r\n                                        </div>\r\n                                        <div className=\"card-content\">\r\n                                            <h2>{work.frontmatter.title}</h2>\r\n                                            <div className=\"content\">\r\n                                                {work.frontmatter.description}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                    ))                      \r\n                )}\r\n                />\r\n                </div>\r\n                </section>\r\n                <Contact/>\r\n        </PageTransition>\r\n    );\r\n}","import React from \"react\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport HomeTemplate from '../templates/HomeTemplate';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <HomeTemplate/>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}